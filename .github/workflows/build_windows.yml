name: Build Windows

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
        default: master
      releaseVersion:
        required: true
        type: string
      buildVersion:
        required: true
        type: string
      artifactArchive:
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          submodules: 'recursive'
          ref: ${{ inputs.branch }}
      
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        
      - name: Restore NuGet packages
        working-directory: vs
        run: nuget restore dragonscript.sln
      
      - name: Init custom.py
        run: |
          $Content = Get-Content -Raw -Path "${{ github.workspace }}/.github/workflows/custom_windows.py"
          $Content = $Content -creplace "ReleaseVersion","${{ inputs.releaseVersion }}"
          $Content = $Content -creplace "BuildVersion","${{ inputs.buildVersion }}"
          Set-Content -Path "custom.py" -Value $Content
        
      - name: Build
        working-directory: vs
        run: |
          $Config = "Release"
          $BuilVersion = "${{ inputs.buildVersion }}"
          msbuild /m -maxcpucount /p:Configuration=$Config /p:BuildVersion=$BuilVersion dragonscript.sln
      
      - name: Archive
        run: |
          $DistributeDir = "${{ github.workspace }}/vs/x64/Release/Distribute"
          Compress-Archive -Path "$DistributeDir/Application/*" -DestinationPath "libdscript-${{ inputs.releaseVersion }}-windows64.zip"
          Compress-Archive -Path "$DistributeDir/SDK/*" -DestinationPath "libdscript-sdk-${{ inputs.releaseVersion }}-windows64.zip"
          Compress-Archive -Path "$DistributeDir/Debug/*" -DestinationPath "libdscript-dbg-${{ inputs.releaseVersion }}-windows64.zip"
        
      - name: Store Archives
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifactArchive }}
          path: |
            libdscript-${{ inputs.releaseVersion }}-windows64.zip
            libdscript-sdk-${{ inputs.releaseVersion }}-windows64.zip
            libdscript-dbg-${{ inputs.releaseVersion }}-windows64.zip
          if-no-files-found: error
