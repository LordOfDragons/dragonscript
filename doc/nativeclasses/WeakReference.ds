//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

/**
 * \brief Weak object reference.
 * 
 * Allows to store a weak reference to an object without actively holding a reference.
 * This is typically used to avoid reference loops which can cause objects to leak
 * until garbage collected. Since DragonScript is not using active garbage collecting
 * this can be very well not before the application stops running. A weak reference
 * returns \em null if all regular references to the object haved been released.
 * 
 * This is a native class. It can not be subclassed.
 * \author Roland Pl√ºss
 * \version 1.0
 * \date 2015
 */
fixed class WeakReference
	/** \name Constructors */
	/*@{*/
	/** \brief Create empty weak reference. */
	public func new()
	end
	
	/** \brief Create weak reference with weak reference to \em object if not \em null. */
	public func new( Object object )
	end
	/*@}*/
	
	
	
	/** \name Management */
	/*@{*/
	/** \brief Object or \em null if all references to object have been released or \em null has been assigned. */
	public func Object get()
	end
	
	/** \brief Set object or \em null. */
	public func void set( Object object )
	end
	
	
	
	/**
	 * \brief Weak reference is equal to another object.
	 * \returns \em true if \em other is of type WeakReference and both have the same object set.
	*/
	public func bool equals( Object other )
	end
	
	/** \brief Hash code for use as dictionary keys. */
	public func int hashCode()
	end
	/*@}*/
end
